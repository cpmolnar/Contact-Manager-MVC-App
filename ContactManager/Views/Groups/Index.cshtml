@model Tuple<IEnumerable<ContactManager.Models.Groups>, IEnumerable<ContactManager.Models.AspNetContact>>

@{
    ViewBag.Title = "My Groups";
}

<h2>My Groups</h2>

<head>
    <script type="text/javascript" src="~/Scripts/SortAlphabetically.js"></script>
    <script src="@Url.Content("~/Scripts/jquery-3.1.1.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/jquery.unobtrusive-ajax.min.js")" type="text/javascript"></script>
</head>

<p>
    @Html.ActionLink("Create New Group", "Create")
</p> 

@foreach (var item in Model.Item1)
{
    <hr color="gray">
    <span style="font-size:160%"><b>@Html.DisplayFor(modelItem => item.Group.GroupName)</b></span>
    <span style="font-size:120%"><i>@Html.DisplayFor(modelItem => item.Group.StatusMessage)</i></span>
    <p style="font-size:100%">
        Owner: @Html.DisplayFor(modelItem => item.Group.UserId)
    </p>
    <p>
        @Html.ActionLink("Edit Group", "Edit", new { id = item.Group.GroupId })
    </p>

    <span style="font-size:120%"><b>Group Members</b></span>
    <span><a href="javascript:addUser(@item.Group.GroupId);">Add Group User</a></span>
    <table class="table" id="usersTable">
        <tr>
            <th>
                Username
            </th>
            <th></th>
        </tr>
        @foreach (var i in item.Users)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => i.UserName)
                </td>
                <td align="right">
                    <form method="post" id="rmvUserForm">
                        @Html.AntiForgeryToken()
                        <a href="javascript:removeUser(@item.Group.GroupId, '@i.UserName');">Remove</a>
                    </form>
                </td>
            </tr>
        }
    </table>

    <span style="font-size:120%"><b>Group Contacts</b></span>
    <span><a href="javascript:addContact(@item.Group.GroupId);">Add Group Contacts</a></span>
    
    <table class="table" id="contactsTable">
        <tr>
            <th onclick="sortTable(0, 'Name')">
                Name
            </th>
            <th onclick="sortTable(1, 'Address')">
                Address
            </th>
            <th onclick="sortTable(2, 'City')">
                City
            </th>
            <th onclick="sortTable(3, 'State')">
                State
            </th>
            <th onclick="sortTable(4, 'Zip')">
                Zip
            </th>
            <th onclick="sortTable(5, 'Email')">
                Email
            </th>
            <th onclick="sortTable(6, 'Owner')">
                Owner
            </th>
            <th></th>
        </tr>
        @foreach (var i in item.Contacts)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => i.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => i.Address)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => i.City)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => i.State)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => i.Zip)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => i.Email)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => i.OwnerID)
                </td>
                <td align="right">
                    <form method="post" id="rmvContactForm">
                        @Html.AntiForgeryToken()
                        <a href="javascript:removeContact(@item.Group.GroupId, @i.ContactId);">Remove</a>
                    </form>
                </td>
            </tr>
        }
    </table>
}

@using (Html.BeginForm("Create", "GroupContacts", method: FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div id="addContactsModal" class="modal">
        <div class="modal-content">
            <div class="modal-header">
                <span class="close">&times;</span>
                <h2>Add your contacts</h2>
            </div>
            <div class="modal-body">
                <table class="table" id="dbTable">
                    <tr>
                        <th></th>
                        <th onclick="sortTable(0, 'Name')">Name</th>
                        <th onclick="sortTable(1, 'Address')">Address</th>
                        <th onclick="sortTable(2, 'City')">City</th>
                        <th onclick="sortTable(3, 'State')">State</th>
                        <th onclick="sortTable(4, 'Zip')">Zip</th>
                        <th onclick="sortTable(5, 'Email')">Email</th>
                    </tr>
                    @foreach (var contact in Model.Item2)
                    {
                        <tr>
                            <td>
                                <input type="checkbox" value="@contact.ContactId" name="selected" />
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => contact.Name)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => contact.Address)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => contact.City)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => contact.State)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => contact.Zip)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => contact.Email)
                            </td>
                        </tr>
                    }
                </table>
            </div>
            <div class="modal-footer">
                <input type="submit" value="Add Contacts" class="btn btn-default" style="float:left;" onclick="return submitContactsChecked();"/>
            </div>
        </div>
    </div>
}

@using (Html.BeginForm("Create", "GroupUsers", method: FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div id="addUsersModal" class="modal">
        <div class="modal-content">
            <div class="modal-header">
                <span class="close">&times;</span>
                <h2>Add a user</h2>
            </div>
            <div class="modal-body">
                <div class="form-group">
                    <span style="float:left"><b>Username</b></span>
                    <div class="col-md-10">
                        <input type="text" placeholder="Type a username..." id="username"/>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <input type="submit" value="Add User" class="btn btn-default" style="float:left;" onclick="return submitUser();" />
            </div>
        </div>
    </div>
}

<script>
    // Get the modal
    var contactsmodal = document.getElementById('addContactsModal');
    var usersmodal = document.getElementById('addUsersModal');
    // Get the <span> element that closes the modal 
    var userSpan = document.getElementsByClassName("close")[1];
    var contactSpan = document.getElementsByClassName("close")[0];

    close.onclick = function () {
        contactsmodal.style.display = "none";
        usersmodal.style.display = "none";
    }
    var i;
    function addContact(id){
        i = id;
        contactsmodal.style.display = "block";
    }

    function addUser(id) {
        i = id;
        usersmodal.style.display = "block";
    }

    function removeContact(g, c) {
        form = document.getElementById('rmvContactForm');
        var att = '../GroupContacts/Delete?groupId=' + g + '&contactId=' + c;
        $('form').attr('action', att);
        form.submit();
    }

    function removeUser(g, u) {
        form = document.getElementById('rmvUserForm');
        var att = '../GroupUsers/Delete?groupId=' + g + '&username=' + u;
        $('form').attr('action', att);
        form.submit();
    }

    function submitContactsChecked() {
        var selectedIds = [];
        $("input[name=selected]:checked").each(function () {
            selectedIds.push($(this).val());
        });
        var att = '../GroupContacts/Create?groupId=' + i;
        $.each(selectedIds, function (k, v) {
            att += '&contactIds=' + String(selectedIds[k]);
        });
        $('form').attr('action', att);
        if (selectedIds.length > 0)
            return;
        else {
            contactsmodal.style.display = "none";
            return false;
        }
    }

    function submitUser() {
        var u = $('#username').val();
        var att = '../GroupUsers/Create?groupId=' + i + '&username=' + u;
        $('form').attr('action', att);
        if (u.length > 0)
            return;
        else {
            usersmodal.style.display = "none";
            return false;
        }
    }

    // When the user clicks on <span> (x), close the modal
    contactSpan.onclick = function () {
        contactsmodal.style.display = "none";
    }

    userSpan.onclick = function () {
        usersmodal.style.display = "none";
    }

    // When the user clicks anywhere outside of the modal, close it
    window.onclick = function (event) {
        if (event.target == modal) {
            modal.style.display = "none";
        }
    }
</script>

@section scripts{
    @Scripts.Render("~/Scripts/jquery.unobtrusive-ajax.min.js")
}